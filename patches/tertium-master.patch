diff --git a/Makefile b/Makefile
index 5fb676c..592f400 100644
--- a/Makefile
+++ b/Makefile
@@ -73,9 +73,8 @@ LIBCSRC=\
 	src/exc/run.c\
 	src/exc/runenv.c\
 	src/exc/setenv.c\
-	src/fmt/fdflush.c\
-	src/fmt/fdinit.c\
 	src/fmt/fmt.c\
+	src/fmt/init.c\
 	src/fmt/install.c\
 	src/fmt/verb.c\
 	src/gen/basename.c\
@@ -95,6 +94,8 @@ LIBCSRC=\
 	src/hsh/state0.c\
 	src/hsh/update.c\
 	src/hsh/whirlpool.c\
+	src/ioq/arr.c\
+	src/ioq/fd.c\
 	src/ioq/feed.c\
 	src/ioq/flush.c\
 	src/ioq/fmt.c\
@@ -108,6 +109,7 @@ LIBCSRC=\
 	src/ioq/putfd.c\
 	src/ioq/putfile.c\
 	src/ioq/seek.c\
+	src/ioq/setnoflush.c\
 	src/ioq/stderr.c\
 	src/ioq/stdin.c\
 	src/ioq/stdout.c\
diff --git a/inc/tertium/std.h b/inc/tertium/std.h
index c9809f7..180e098 100644
--- a/inc/tertium/std.h
+++ b/inc/tertium/std.h
@@ -93,12 +93,21 @@ enum {
 #define C_HOWMANY(a, b) (((a)+((b)-1))/(b))
 
 /* ioq macros */
-#define C_FD0 0
-#define C_FD1 1
-#define C_FD2 2
-#define C_BIOSIZ 8192
-#define C_ERRSIZ 512
-#define c_ioq_INIT(a, b, c) { (b), (c), (a) }
+enum {
+	/* default file descriptors */
+	C_FD0 = 0,
+	C_FD1 = 1,
+	C_FD2 = 2,
+
+	/* sizes */
+	C_BIOSIZ = 8192,
+	C_ERRSIZ = 512,
+
+	/* private flags */
+	__IOQ_ONOFLUSH = 1 << 0,
+};
+
+#define c_ioq_INIT(a, b, c) { (b), (c), (a), 0 }
 
 /* std macros */
 #define c_std_free(a) a = c_std_free_((a))
@@ -174,13 +183,13 @@ struct ctype_dir {
 
 /* fmt types */
 typedef struct ctype_fmt ctype_fmt;
+typedef ctype_status (*ctype_fmtopfn)(ctype_fmt *, char *, usize);
 typedef ctype_status (*ctype_fmtfn)(ctype_fmt *);
 
 struct ctype_fmt {
 	ctype_arr *mb;
 	va_list args;
-	ctype_iofn op;
-	ctype_fmtfn fn;
+	ctype_fmtopfn func;
 	usize nfmt;
 	int prec;
 	int r;
@@ -216,6 +225,7 @@ struct ctype_ioq {
 	ctype_arr *mb;
 	ctype_iofn op;
 	ctype_fd fd;
+	uchar opts;
 };
 
 /* cdb types */
@@ -333,8 +343,7 @@ ctype_status c_exc_runenv(char *, char **, char **);
 ctype_status c_exc_setenv(char *, char *);
 
 /* fmt routines */
-ctype_status c_fmt_fdflush(ctype_fmt *);
-void c_fmt_fdinit(ctype_fmt *, ctype_fd, ctype_arr *, ctype_iofn);
+void c_fmt_init(ctype_fmt *, void *, ctype_arr *, ctype_fmtopfn);
 size c_fmt_fmt(ctype_fmt *, char *);
 ctype_status c_fmt_install(int, ctype_fmtfn);
 
@@ -350,6 +359,8 @@ ctype_status c_hsh_putfile(ctype_hst *, ctype_hmd *, char *);
 ctype_status c_hsh_putfd(ctype_hst *, ctype_hmd *, ctype_fd, usize);
 
 /* ioq routines */
+ctype_arr *c_ioq_arr(ctype_ioq *);
+ctype_fd c_ioq_fd(ctype_ioq *);
 size c_ioq_feed(ctype_ioq *);
 ctype_status c_ioq_flush(ctype_ioq *);
 size c_ioq_fmt(ctype_ioq *, char *, ...);
@@ -363,6 +374,7 @@ size c_ioq_put(ctype_ioq *, char *);
 ctype_status c_ioq_putfd(ctype_ioq *, ctype_fd, usize);
 ctype_status c_ioq_putfile(ctype_ioq *, char *);
 void c_ioq_seek(ctype_ioq *, usize);
+void c_ioq_setnoflush(ctype_ioq *);
 size c_ioq_vfmt(ctype_ioq *, char *, va_list);
 
 /* mem routines */
diff --git a/src/arr/vfmt.c b/src/arr/vfmt.c
index fd3a2f3..bb51148 100644
--- a/src/arr/vfmt.c
+++ b/src/arr/vfmt.c
@@ -2,25 +2,17 @@
 #include <tertium/std.h>
 
 static ctype_status
-nomem(ctype_fmt *p)
+put(ctype_fmt *p, char *s, usize n)
 {
-	(void)p;
-	errno = C_ENOMEM;
-	return -1;
+	return c_arr_cat(p->mb, s, n, sizeof(uchar));
 }
 
 size
 c_arr_vfmt(ctype_arr *p, char *fmt, va_list args)
 {
 	ctype_fmt f;
-	size n;
-
-	c_fmt_fdinit(&f, 0, p, nil);
-	f.farg = nil;
-	f.fn = &nomem;
 
+	c_fmt_init(&f, nil, p, put);
 	va_copy(f.args, args);
-	n = c_fmt_fmt(&f, fmt);
-
-	return n;
+	return c_fmt_fmt(&f, fmt);
 }
diff --git a/src/dir/newfile.c b/src/dir/newfile.c
index 85f5aa9..d7de057 100644
--- a/src/dir/newfile.c
+++ b/src/dir/newfile.c
@@ -8,20 +8,26 @@ __dir_newfile(char *path, char *name, uint opts)
 {
 	ctype_node *p;
 	ctype_dent *ep;
-	usize len;
-	usize plen;
+	usize len, plen;
 	ushort nlen;
 	uchar *sp;
 
-	nlen = c_str_len(name, C_USHRTMAX);
-	if (name[nlen] != 0) {
-		while (name[nlen - 1] == '/')
-			--nlen;
+	nlen = c_str_len(name, C_USIZEMAX);
+	plen = c_str_len(path, C_USIZEMAX);
+	if (!plen) {
+		for (; name[nlen - 1] == '/'; --nlen) ;
+		path = name;
+		if (!(name = c_mem_rchr(path, nlen, '/'))) {
+			name = path;
+			plen = 0;
+		} else {
+			++name;
+			plen = name - path;
+			nlen -= plen;
+		}
 	}
 
-	plen = c_str_len(path, C_USIZEMAX);
 	len = sizeof(*p) + sizeof(*ep) + plen + nlen + 2;
-
 	if (!(opts & C_FSNOI))
 		len += sizeof(ctype_stat) + 16;
 
@@ -46,6 +52,7 @@ __dir_newfile(char *path, char *name, uint opts)
 		if (ep->path[plen - 1] != '/')
 			ep->path[plen++] = '/';
 	}
+
 	ep->name = ep->path + plen;
 	c_mem_cpy(ep->name, nlen, name);
 	ep->name[nlen] = 0;
diff --git a/src/dyn/vfmt.c b/src/dyn/vfmt.c
index 0670ee8..6114507 100644
--- a/src/dyn/vfmt.c
+++ b/src/dyn/vfmt.c
@@ -2,30 +2,20 @@
 #include <tertium/std.h>
 
 static ctype_status
-growbuffer(ctype_fmt *p)
+put(ctype_fmt *p, char *s, usize n)
 {
-	if (c_dyn_ready(p->mb, c_arr_total(p->mb) + 1, sizeof(uchar)) < 0)
-		return -1;
-
-	return 0;
+	return c_dyn_cat(p->mb, s, n, sizeof(uchar));
 }
 
 size
 c_dyn_vfmt(ctype_arr *p, char *fmt, va_list args)
 {
 	ctype_fmt f;
-	size n;
-
-	if (!c_arr_total(p))
-		if (c_dyn_ready(p, C_DYNMINALLOC, sizeof(uchar)) < 0)
-			return -1;
 
-	c_fmt_fdinit(&f, 0, p, nil);
-	f.farg = nil;
-	f.fn = &growbuffer;
+	if (c_dyn_ready(p, C_DYNMINALLOC, sizeof(uchar)) < 0)
+		return -1;
 
+	c_fmt_init(&f, nil, p, put);
 	va_copy(f.args, args);
-	n = c_fmt_fmt(&f, fmt);
-
-	return n;
+	return c_fmt_fmt(&f, fmt);
 }
diff --git a/src/fmt/__int__.h b/src/fmt/__int__.h
index 24385e1..1fe426e 100644
--- a/src/fmt/__int__.h
+++ b/src/fmt/__int__.h
@@ -5,4 +5,4 @@ struct fmtverb {
 
 extern ctype_arr __fmt_Fmts;
 extern struct fmtverb __fmt_VFmts[];
-extern ctype_status __fmt_trycat(ctype_fmt *, char *, usize, usize);
+extern ctype_status __fmt_trycat(ctype_fmt *, char *, usize);
diff --git a/src/fmt/fdflush.c b/src/fmt/fdflush.c
deleted file mode 100644
index 07a8fcf..0000000
--- a/src/fmt/fdflush.c
+++ /dev/null
@@ -1,15 +0,0 @@
-#include <tertium/cpu.h>
-#include <tertium/std.h>
-
-ctype_status
-c_fmt_fdflush(ctype_fmt *p)
-{
-	size r;
-
-	if ((r = c_sys_allrw(p->op, (uintptr)p->farg, p->mb->p, p->mb->n)) < 0)
-		return -1;
-
-	c_arr_trunc(p->mb, c_arr_bytes(p->mb) - r, sizeof(uchar));
-
-	return 0;
-}
diff --git a/src/fmt/fdinit.c b/src/fmt/fdinit.c
deleted file mode 100644
index c3a349e..0000000
--- a/src/fmt/fdinit.c
+++ /dev/null
@@ -1,15 +0,0 @@
-#include <tertium/cpu.h>
-#include <tertium/std.h>
-
-void
-c_fmt_fdinit(ctype_fmt *p, ctype_fd fd, ctype_arr *mb, ctype_iofn fn)
-{
-	p->mb = mb;
-	p->fn = &c_fmt_fdflush;
-	p->op = fn;
-	p->farg = (void *)(uintptr)fd;
-	p->nfmt = 0;
-	p->flags = 0;
-	p->width = 0;
-	p->prec = 0;
-}
diff --git a/src/fmt/fmt.c b/src/fmt/fmt.c
index 0eecd8e..2165c18 100644
--- a/src/fmt/fmt.c
+++ b/src/fmt/fmt.c
@@ -121,7 +121,7 @@ c_fmt_fmt(ctype_fmt *p, char *fmt)
 			continue;
 		}
 
-		__fmt_trycat(p, (char *)s, 1, sizeof(uchar));
+		__fmt_trycat(p, (char *)s, 1);
 	}
 
 	return p->nfmt - nfmt;
diff --git a/src/fmt/init.c b/src/fmt/init.c
new file mode 100644
index 0000000..0dc03cf
--- /dev/null
+++ b/src/fmt/init.c
@@ -0,0 +1,14 @@
+#include <tertium/cpu.h>
+#include <tertium/std.h>
+
+void
+c_fmt_init(ctype_fmt *p, void *farg, ctype_arr *mb, ctype_fmtopfn func)
+{
+	p->mb = mb;
+	p->func = func;
+	p->farg = farg;
+	p->nfmt = 0;
+	p->flags = 0;
+	p->width = 0;
+	p->prec = 0;
+}
diff --git a/src/fmt/verb.c b/src/fmt/verb.c
index 76950ff..3c47cdd 100644
--- a/src/fmt/verb.c
+++ b/src/fmt/verb.c
@@ -39,41 +39,15 @@ struct fmtverb __fmt_VFmts[] = {
 	{   0, nil   },
 };
 
-static size
-nobuffer(ctype_fmt *p, char *s, usize n)
-{
-	return c_sys_allrw(p->op, (uintptr)p->farg, s, C_MIN(n, C_BIOSIZ));
-}
-
-static size
-buffered(ctype_fmt *p, char *s, usize n)
-{
-	if (n > c_arr_avail(p->mb) && p->fn(p) < 0)
-		return -1;
-
-	return c_arr_cat(p->mb, s, C_MIN(n, c_arr_avail(p->mb)), sizeof(uchar));
-}
-
 ctype_status
-__fmt_trycat(ctype_fmt *p, char *s, usize m, usize n)
+__fmt_trycat(ctype_fmt *p, char *s, usize n)
 {
-	size (*f)(ctype_fmt *, char *, usize);
 	size r;
 
-	if (C_OFLW_UM(usize, n, m))
+	if ((r = p->func(p, s, n)) < 0)
 		return -1;
 
-	m *= n;
-
-	f = p->mb->a ? buffered : nobuffer;
-	while (m) {
-		if ((r = f(p, s, m)) < 0)
-			return -1;
-		m -= r;
-		s += r;
-		p->nfmt += r;
-	}
-
+	p->nfmt += r;
 	return 0;
 }
 
@@ -85,7 +59,7 @@ fmtpad(ctype_fmt *p, usize n)
 	w = p->width - n;
 
 	for (; w > 0; w--)
-		if (__fmt_trycat(p, " ", 1, sizeof(uchar)) < 0)
+		if (__fmt_trycat(p, " ", 1) < 0)
 			return -1;
 
 	return 0;
@@ -106,7 +80,7 @@ fmtcat(ctype_fmt *p, char *s, usize n)
 	if ((p->flags & C_FMTLEFT) && fmtpad(p, n) < 0)
 		return -1;
 
-	if (__fmt_trycat(p, s, n, sizeof(uchar)) < 0)
+	if (__fmt_trycat(p, s, n) < 0)
 		return -1;
 
 	if (!(p->flags & C_FMTLEFT) && fmtpad(p, n) < 0)
diff --git a/src/gen/basename.c b/src/gen/basename.c
index 3ce38ec..c8a72de 100644
--- a/src/gen/basename.c
+++ b/src/gen/basename.c
@@ -11,9 +11,10 @@ c_gen_basename(char *s)
 		return ".";
 
 	n = c_str_len(s, C_USIZEMAX);
-	n--;
+	if (!--n)
+		return s;
 
-	for (; s[n] == '/'; n--) ;
+	for (; s[n] == '/'; --n) ;
 
 	s[n + 1] = 0;
 
diff --git a/src/hsh/putfd.c b/src/hsh/putfd.c
index db6034e..874144c 100644
--- a/src/hsh/putfd.c
+++ b/src/hsh/putfd.c
@@ -11,12 +11,9 @@ c_hsh_putfd(ctype_hst *hs, ctype_hmd *p, ctype_fd fd, usize n)
 	char buf[C_BIOSIZ];
 	void *mp;
 
-	if (fd && !n)
-		return 0;
-
 	p->init(hs);
 
-	if (!fd || (mp = MMAP(fd, n)) == (void *)-1) {
+	if (!n || (mp = MMAP(fd, n)) == (void *)-1) {
 		while ((r = c_sys_read(fd, buf, sizeof(buf))) > 0)
 			p->update(hs, buf, r);
 		p->end(hs);
diff --git a/src/ioq/arr.c b/src/ioq/arr.c
new file mode 100644
index 0000000..644c463
--- /dev/null
+++ b/src/ioq/arr.c
@@ -0,0 +1,8 @@
+#include <tertium/cpu.h>
+#include <tertium/std.h>
+
+ctype_arr *
+c_ioq_arr(ctype_ioq *p)
+{
+	return p->mb;
+}
diff --git a/src/ioq/fd.c b/src/ioq/fd.c
new file mode 100644
index 0000000..e02165f
--- /dev/null
+++ b/src/ioq/fd.c
@@ -0,0 +1,8 @@
+#include <tertium/cpu.h>
+#include <tertium/std.h>
+
+ctype_fd
+c_ioq_fd(ctype_ioq *p)
+{
+	return p->fd;
+}
diff --git a/src/ioq/init.c b/src/ioq/init.c
index c411cf9..cae9339 100644
--- a/src/ioq/init.c
+++ b/src/ioq/init.c
@@ -7,4 +7,5 @@ c_ioq_init(ctype_ioq *p, ctype_fd fd, ctype_arr *b, ctype_iofn f)
 	p->mb = b;
 	p->op = f;
 	p->fd = fd;
+	p->opts = 0;
 }
diff --git a/src/ioq/nput.c b/src/ioq/nput.c
index 84f0d5b..ac8e7c8 100644
--- a/src/ioq/nput.c
+++ b/src/ioq/nput.c
@@ -8,15 +8,21 @@ c_ioq_nput(ctype_ioq *p, char *s, usize n)
 
 	v = n;
 
-	if (n > c_arr_avail(p->mb))
-		if (c_ioq_flush(p) < 0)
-			return -1;
-
-	while (n > c_arr_avail(p->mb)) {
-		if ((r = c_sys_allrw(p->op, p->fd, s, C_MIN(n, C_BIOSIZ))) < 0)
-			return r;
-		n -= r;
-		s += r;
+	if (n > c_arr_avail(p->mb)) {
+		if (p->opts & __IOQ_ONOFLUSH) {
+			if (c_dyn_ready(p->mb, n, sizeof(uchar)) < 0)
+				return -1;
+		} else {
+			if (c_ioq_flush(p) < 0)
+				return -1;
+			while (n > c_arr_avail(p->mb)) {
+				r = C_MIN(n, C_BIOSIZ);
+				if (c_sys_allrw(p->op, p->fd, s, r) < 0)
+					return r;
+				n -= r;
+				s += r;
+			}
+		}
 	}
 
 	c_mem_cpy(p->mb->p + p->mb->n, n, s);
diff --git a/src/ioq/putfd.c b/src/ioq/putfd.c
index 25f1b4a..48c6713 100644
--- a/src/ioq/putfd.c
+++ b/src/ioq/putfd.c
@@ -11,10 +11,7 @@ c_ioq_putfd(ctype_ioq *p, ctype_fd fd, usize n)
 	char buf[C_BIOSIZ];
 	void *mp;
 
-	if (fd && !n)
-		return 0;
-
-	if (!fd || (mp = MMAP(fd, n)) == (void *)-1) {
+	if (!n || (mp = MMAP(fd, n)) == (void *)-1) {
 		while ((r = c_sys_read(fd, buf, sizeof(buf))) > 0)
 			if (c_ioq_nput(p, buf, r) < 0)
 				return -1;
diff --git a/src/ioq/setnoflush.c b/src/ioq/setnoflush.c
new file mode 100644
index 0000000..75ae5f9
--- /dev/null
+++ b/src/ioq/setnoflush.c
@@ -0,0 +1,8 @@
+#include <tertium/cpu.h>
+#include <tertium/std.h>
+
+void
+c_ioq_setnoflush(ctype_ioq *p)
+{
+	p->opts |= __IOQ_ONOFLUSH;
+}
diff --git a/src/ioq/vfmt.c b/src/ioq/vfmt.c
index fbc9cc3..e388678 100644
--- a/src/ioq/vfmt.c
+++ b/src/ioq/vfmt.c
@@ -1,16 +1,18 @@
 #include <tertium/cpu.h>
 #include <tertium/std.h>
 
+static ctype_status
+put(ctype_fmt *p, char *s, usize n)
+{
+	return c_ioq_nput(p->farg, s, n);
+}
+
 size
 c_ioq_vfmt(ctype_ioq *p, char *fmt, va_list args)
 {
 	ctype_fmt f;
-	size n;
-
-	c_fmt_fdinit(&f, p->fd, p->mb, p->op);
 
+	c_fmt_init(&f, p, p->mb, put);
 	va_copy(f.args, args);
-	n = c_fmt_fmt(&f, fmt);
-
-	return n;
+	return c_fmt_fmt(&f, fmt);
 }
