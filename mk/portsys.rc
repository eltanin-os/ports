#!/bin/rc -e
#
argv0=$0

if (test -z $"PORTS) {
	echo $argv0: '<error>' missing PORTS environmental variable >[1=2]
	exit 1
}

. $PORTS/mk/config.rc
. $PORTS/mk/global.rc
. $PORTS/mk/local.rc

fn sigexit {
	rm -Rf $tmpbuild $tmpdir
}

if (~ $#* 0) portsys_io_error missing action

ODI=false
ODP=false
ODR=true

switch ($1) {
case package
	OBP=true
	ODP=true
case install
	OBI=true
	ODI=true
case *
	portsys_io_error unknown action
}

AAV=()
DAV=()
KP=false
CACHEDIR=''
EXTRAINC=''
EXTRALIB=''
PKGPATH=''
SYSPATH=''
TDBDIR=''

shift
while (~ $1 -*) {
	for (opt in `{printf '%s' $1 | fold -w1}) switch($opt) {
	case A
		if (test -z $"2) portsys_io_error no packages given
		AAV=(`{echo $2})
		shift
	case D
		if (test -z $"2) portsys_io_error no packages given
		DAV=(`{echo $2})
		shift
	case d
		if (test -z $"2) portsys_io_error no cache directory given
		portsys_io_message using cache directory
		CACHEDIR=$"2
		shift
	case e
		if (test -z $"2) portsys_io_error no directory given
		portsys_io_message using a extra directory
		EXTRAINC=-I$"2$"INCDIR
		EXTRALIB=-L$"2$"LIBDIR
		shift
	case k
		portsys_io_message keeping dependencies
		KP=true
	case p
		portsys_io_message portsys_io_error no directory given
		PKGPATH=$"2
		shift
	case r
		if (test -z $"2) portsys_io_error no directory given
		portsys_io_message alternative root directory set
		SYSPATH=$"2
		shift
	case -
		;
	case *
		portsys_io_error unknown flag
	}
	shift
}

BAV=(`{echo $1})
if (~ $#* 0) portsys_io_error no arguments given
if (test $#* -gt 1) portsys_io_error too much arguments

tmpbuild=`{mktemp} || portsys_io_error failed to obtain a temporary file.
chmod +x $"tmpbuild
tmpdir=`{mktemp -d} || portsys_io_error failed to obtain a temporary directory.

if (test -z $"SYSPATH) SYSPATH=/

cat <<EOF >$tmpbuild
#!/bin/rc -e
. $PORTS/mk/config.rc
. $PORTS/mk/global.rc
. $PORTS/mk/local.rc
CPPFLAGS=($CPPFLAGS -I$tmpdir$INCDIR -I$SYSPATH$INCDIR $EXTRAINC)
LDFLAGS=($LDFLAGS -L$tmpdir$LIBDIR -L$SYSPATH$LIBDIR $EXTRALIB)
PORTSYS_SYSPATH='$SYSPATH'
PORTSYS_ROOTPWD=`{pwd}
EOF

CURDIR=`{pwd}
if ($ODP) {
	if (test -z $"PKGPATH) PKGPATH=$"CURDIR/portsys_pkgs
	if (! test -d $"PKGPATH) mkdir -p $"PKGPATH
	TDBDIR=$"PKGPATH
}

if (test -z $"CACHEDIR) CACHEDIR=$"CURDIR/portsys_cache
if (! test -d $"CACHEDIR) mkdir -p $"CACHEDIR
if (test -z $"TDBDIR) TDBDIR=$SYSPATH$"DBDIR
DEVPATH=$SYSPATH
DEVDBDIR=$DBDIR

DPAV=`{portsys_arg_deps $"DAV' '$"AAV $BAV}
@{
	if (!$KP) {
		ODP=false
		DEVPATH=$tmpdir
		DEVDBDIR=$"tmpdir$"DBDIR
		mkdir -p $DEVDBDIR
	}
	if ($ODP) {
		DEVPATH=$tmpdir
		DEVDBDIR=$"TDBDIR
	}
	if (~ $#DAV 0) DAV=' '
	DEV=true
	ODI=true
	ODR=false
	for (dep in $DPAV) {
		BIN=false
		if (~ ' '$"BAV' ' *' '$"dep' '*) BIN=true
		portsys_gen_pkg $dep
	}
}

@{
	BIN=true
	DEV=true
	for (pkg in $AAV) portsys_gen_pkg $pkg
}

@{
	BIN=false
	DEV=true
	for (pkg in $DAV) portsys_gen_pkg $pkg
}

@{
	BIN=true
	DEV=false
	for (pkg in $BAV) {
		if (~ ' '$"DPAV' ' *' '$"pkg' '*) continue
		portsys_gen_pkg $pkg
	}
}

portsys_io_message executing the build script
@{ cd $tmpdir
exec env -i PATH=$"PATH PORTS=$"PORTS $tmpbuild }
