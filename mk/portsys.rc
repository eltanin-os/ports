#!/bin/rc -e

if (test -z $"PORTS) {
	echo '<error>' $0: missing PORTS environmental variable >[1=2]
	exit 1
}
true # only god knows why
argv0=$0
. $PORTS/mk/config.rc
. $PORTS/mk/io.rc

rnum=`{ls $PORTS/pkg}
if (~ $#rnum 0) error no repositories found

if (~ $#* 0) {
	warning no arguments given
	warning aborting...
	exit 0
}

switch ($1) {
case package
	mk='pack'
case install
	mk='install'
case *
	error unknown action
}
shift

# path vars
EXTRAINC=()
EXTRALIB=()
PKGPATH=''
SYSPATH=''

# flags
bflag='false'
dflag='false'
kflag='false'
mflag='false'
sflag='false'
uflag='false'

while (~ $1 -*) {
	for (opt in `{printf '%s' $1 | fold -w1}) switch($opt) {
	case A
		bflag='true'
		dflag='true'
		mflag='true'
		sflag='true'
	case B
		bflag='true'
	case D
		dflag='true'
	case M
		mflag='true'
	case S
		sflag='true'
	case d
		if (test -z $2) error no cache directory given
		message using cache directory
		CACHEDIR=$2
		shift
	case e
		if (test -z $2) error no directory given
		message using a extra directory
		EXTRAINC=($EXTRAINC '-I'$2$"INCDIR)
		EXTRALIB=($EXTRALIB '-L'$2$"LIBDIR)
		shift
	case k
		message preserving dependencies
		kflag='true'
	case p
		if (test -z $2) error no directory given
		PKGPATH=$2
		shift
	case r
		if (test -z $2) error no directory given
		message alternative root directory set
		SYSPATH=$2
		shift
	case u
		uflag='true'
	case -
		;
	case *
		error $opt unknown flag
	}
	shift
}

if (!$bflag && !$dflag && !$mflag && !$sflag) {
	warning no flags given
	warning aborting...
	exit 0
}

# portsys global vars
PWD=`{pwd}
if (~ $PKGPATH '') PKGPATH=$PWD/portsys_pkgs
if (~ $mk 'pack') TDBDIR=$PKGPATH
if not TDBDIR=$DBDIR
if (! test -d $PKGPATH) mkdir $PKGPATH
if (~ $CACHEDIR '') CACHEDIR=$PWD/portsys_cache
if (! test -d $CACHEDIR) mkdir $CACHEDIR
PORTSYS_HOSTOS=`{uname -s | $AWK '{print(tolower($0))}'}
PORTSYS_HOSTARCH=`{uname -m}

# tmp env fuctions
WRKDIR=`{mktemp -dt PORTSYS@XXXXXXXXX}
PORTSYS_PKGDIR=$WRKDIR/pkgroot
fn sigexit {
	rm -Rf $WRKDIR
}

fn getsrc {
	dir=`{$PORTS/mk/bin/helper -k src $1}
	if (! ~ $dir '<nil>') {
		echo -n $dir
	}; if not {
		name=`{$PORTS/mk/bin/helper -k name $1}
		version=`{$PORTS/mk/bin/helper -k version $1}
		echo -n $name-$version
	}
}

# current deps as flags
if ($uflag || ! test -f $PORTS/pkg/cache.cdb) $PORTS/mk/bin/helper -u
deplist=`{$PORTS/mk/bin/helper -d $*}
if (! ~ $status 0) error failed to generate args list
args=($deplist $*)
PORTSYS_TMP_INCDIRS=$EXTRAINC
PORTSYS_TMP_LIBDIRS=$EXTRALIB
if (! ~ $#args 0) {
	PORTSYS_TMP_INCDIRS=($PORTSYS_TMP_INCDIRS '-I'$WRKDIR/pkgroot/$args/$INCDIR)
	PORTSYS_TMP_LIBDIRS=($PORTSYS_TMP_LIBDIRS '-L'$WRKDIR/pkgroot/$args/$LIBDIR)
}

# stage1: fetch, explode, patch
for (pkg in $args) {
	cd $WRKDIR
	message $pkg: fetching...
	mirrors=`{$PORTS/mk/bin/helper -t mirrors $pkg}
	version=`{$PORTS/mk/bin/helper -k version $pkg}
	tmp=`{mktemp -p $WRKDIR}
	$PORTS/mk/bin/fetch $tmp $mirrors
	message $pkg: exploding...
	$PORTS/mk/bin/explode $tmp
	message $pkg: patching...
	cd `{getsrc $pkg}
	for (p in `{$PORTS/mk/bin/helper -t patches $pkg}) {
		dir=`{$PORTS/mk/bin/helper $pkg}
		patch -p1 < $dir/patches/$p
	}
}

# stage2: building
for (pkg in $args) {
	dir=`{getsrc $pkg}
	cd $WRKDIR/$dir
	message $pkg: building...
	@{ name=`{$PORTS/mk/bin/helper -k name $pkg}
	DESTDIR=$WRKDIR/pkgroot/$name
	PATH=$PATH:$PORTS/mk/utils
	PORTSYS_TMP_BUILDDIR=`{mktemp -u 'PORTSYS@XXXXXXXXX'}
	dir=`{$PORTS/mk/bin/helper $pkg}
	$dir/build
	cd $DESTDIR
	message $pkg: preparing...
	$PORTS/mk/bin/prepare }
}

# stage3: install/pack, generate db files
if (! $kflag) deplist=()

for (pkg in $deplist $*) {
	name=`{$PORTS/mk/bin/helper -k name $pkg}
	cd $WRKDIR/pkgroot/$name
	message $pkg: installing and creating database entries...
	$PORTS/mk/bin/list
	version=`{$PORTS/mk/bin/helper -k version $pkg}
	license=`{$PORTS/mk/bin/helper -k license $pkg}
	description=`{$PORTS/mk/bin/helper -k description $pkg}
	mdeps=`{$PORTS/mk/bin/helper -t mdeps $pkg}
	rdeps=`{$PORTS/mk/bin/helper -t rdeps $pkg}
	if ($bflag) {
		$PORTS/mk/bin/$mk INSTALL@DEF
		$PORTS/mk/bin/createdb INSTALL@DEF
		if ($mflag) @{
			rdeps=()
			mdeps=()
			@{ name=$name'-man'
			$PORTS/mk/bin/$mk INSTALL@MAN }
			$PORTS/mk/bin/createdb INSTALL@MAN '-man' '<MANPAGES>'
		}
	}
	if ($dflag) {
		$PORTS/mk/bin/createdb INSTALL@DEV '-dev' '<DEVELOPMENT>'
		if ($mflag) @{
			rdeps=()
			mdeps=()
			@{ name=$name'-devman'
			$PORTS/mk/bin/$mk INSTALL@DEVMAN }
			$PORTS/mk/bin/createdb INSTALL@DEVMAN '-devman' '<DEVELOPMENT MANPAGES>'
		}
	}
	if ($sflag) {
		@{ name=$name'-dynlib'
		$PORTS/mk/bin/$mk INSTALL@DYNLIB }
		$PORTS/mk/bin/createdb INSTALL@DYNLIB '-dynlib' '<DYNAMIC LIBRARIES>'
	}
}
