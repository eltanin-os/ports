#!/bin/rc
#
argv0=$0

if (test -z $"PORTS) {
	echo $argv0: '<error>' missing PORTS environmental variable >[1=2]
	exit 1
}

. $PORTS/mk/config.rc
. $PORTS/mk/common.rc

fn sigexit {
	rm -Rf $bfile $ffile $tmpdir $tmpsysdir
}

OPKG=false
OTMPSYS=false
OCACHE=false
OFILE=false
ONODREL=false
OREL=false
ODREL=false
CACHEDIR=''
BUILDFILE=''

if (~ $#* 0) portsys_io_error missing action

switch ($1) {
case package
	ODREL=true
	ONODREL=true
	OPKG=true
case install
	ODREL=true
	OREL=true
case *
	portsys_io_error unknown action
}

shift

while (~ $1 -*) {
	switch($1) {
	case '-B'
		portsys_io_message not installing development files
		ONODREL=true
	case '-L'
		portsys_io_message using local environment
		OTMPSYS=true
	case '-d'
		if (test -z $"2) portsys_io_error no cache directory given
		portsys_io_message using cache directory
		OCACHE=true
		CACHEDIR=$2
		shift
	case '-f'
		if (test -z $"2) portsys_io_error no file given
		portsys_io_message using build file
		OFILE=true
		BUILDFILE=$2
	case '-*'
		portsys_io_error unknown flag
	}
	shift
}

if (~ $#* 0) portsys_io_error no arguments given

. $PORTS/mk/gen.rc

bfile=`{gentmpfile}
ffile=`{gentmpfile}
vdir=`{mktemp -d} || portsys_io_error failed to obtain temporary directory
tmpdir=$vdir

if ($OTMPSYS) {
	PORTSYS_TMPSYSPATH=`{mktemp -d} ||\
	    portsys_io_error failed to obtain temporary directory
	cat <<EOF >>$bfile
CPPFLAGS=($$CPPFLAGS -I$PORTSYS_TMPSYSPATH$$INCDIR)
LDFLAGS=($$LDFLAGS -L$PORTSYS_TMPSYSPATH$$LIBDIR)
EOF
}

if (test -z $"PORTSYS_SYSPATH) PORTSYS_SYSPATH=/

if ($OREL && ! test -w $"PORTSYS_SYSPATH) {
	if (test -z $"SU) portsys_io_error failed to write to syspath.
	PORTSYS_SU=$SU
}

if ($OPKG) {
	if (test -z $PORTSYS_PKGDESTDIR) PORTSYS_PKGDESTDIR=`{pwd}^/portsys_pkgs
	if (test -z $PORTSYS_DBDESTDIR) PORTSYS_DBDESTDIR=$PORTSYS_PKGDESTDIR
	if (! test -d $PORTSYS_DBDESTDIR) mkdir -p $PORTSYS_DBDESTDIR
	PKGVARS=`{cat <<EOF
PORTSYS_PKGDESTDIR=$PORTSYS_PKGDESTDIR
PORTSYS_DBDESTDIR=$PORTSYS_DBDESTDIR
EOF
	}
}

if (test -z $"PORTSYS_DBDESTDIR) PORTSYS_DBDESTDIR=$"DBDIR
if (! test -d $"PORTSYS_DBDESTDIR) $PORTSYS_SU mkdir -p $"PORTSYS_DBDESTDIR

PORTSYS_HOSTOS=`{uname -s | awk '{print tolower($1)}'}
PORTSYS_HOSTARCH=`{uname -m}

if (test -z $"CACHEDIR) CACHEDIR=`{pwd}^/portsys_cache
if (! test -d $"CACHEDIR) mkdir -p $"CACHEDIR

if ($OFILE) {
	L=(`{gensection $"1}^'-dev' `{gensection $"1 all}^'-dev')
	*=(`{gensection $"1 dev}^':dev' `{gensection $"1 all} `{gensection $"1 bin}^':bin')
}

portsys_io_message generating script files
@{
	ODEF=false
	ODEV=false
	for (p in $*) @{
		av=(`{echo $p | tr ':' ' '})
		if (~ $#av 1) {
			ODEF=true
			ODEV=true
			ODREL=true
		}
		if (~ $av(2) 'dev') {
			ODEV=true
			ODREL=true
		}
		if (~ $av(2) 'bin') ODEF=true
		genpkg $av(1)
	}
}

portsys_io_message starting fetch process
@{ cd $"tmpdir
$"ffile } || portsys_io_error fetch process failed
portsys_io_message starting build process
@{ cd $"tmpdir
$"bfile } || portsys_io_error build process failed

if ($ONODREL) @{
	portsys_io_message cleaning non-necessary database files
	cd $PORTSYS_DBDESTDIR
	rm -f -- $L
}
