<| cat $PORTS/mk/config.mk

all:QV: build
build:QV: build-mk build-in

build-mk:QV: fetch patch
	oldpwd=`pwd`
	mkdir -p $SRC
	cd $SRC
	if test -n "$MKFILE"; then
		cachefile="${oldpwd}/.cache-$(basename $MKFILE)"
		status=`cmp -s $MKFILE $cachefile || echo -n $?`
		if test -n "$status"; then
			env -i PATH="$PATH" PORTS="$PORTS"\
			    mk -f $MKFILE
			cp $MKFILE $cachefile
		fi
	fi

build-in:QV: fetch patch
	oldpwd=`pwd`
	mkdir -p $SRC
	cd $SRC
	if test -n "$INFILE"; then
		cachefile="${oldpwd}/.cache-$(basename $INFILE)"
		status=`cmp -s $INFILE $cachefile || echo -n $?`
		if test -n "$status"; then
			$INTERPRES $INFILE
			$NINJA
			cp $INFILE $cachefile
		fi
	fi

patch:QV: fetch
	mkdir -p $SRC
	cd $SRC
	for p in $PATCHES; do
		patch -p1 < $p;
	done

install:QV: all
	cd $SRC
	for f in $MKFILE; do
		env -i PATH="$PATH" PORTS="$PORTS"\
		    mk -f $f install ROOT="$ROOT"
	done

clean:QV:
	cd $SRC
	for f in $MKFILE; do
		env -i PATH="$PATH" PORTS="$PORTS"\
		    mk -f $f clean
	done

distclean:QV:
	if test -d $SRC; then
		[ -n "$URL" ] && rm -rf `basename $URL`
		rm -rf $SRC dbfile *.pkg.tgz .cache*
	fi

<$PORTS/mk/mk.fetch
