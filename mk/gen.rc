#!/bin/rc
# Public

# $1: file
# $2: section
fn gensection {
	$SED -n '/\['$"2'\]/,/^\[.*\]$/p' $"1 |\
	    $SED '/^\[.*\]$/d'
}

# $* : void
fn gentmpfile {
	tmpfile=`{mktemp} || portsys_io_error failed to obtain temporary file
	chmod +x $tmpfile
	cat <<'EOF' >$tmpfile
#!/bin/rc -e
. $PORTS/mk/config.rc
. $PORTS/mk/common.rc
CPPFLAGS=($CPPFLAGS -I$PORTSYS_SYSPATH$INCDIR)
LDFLAGS=($LDFLAGS -L$PORTSYS_SYSPATH$LIBDIR)
EOF
	if (test -n $PORTSYS_EXTRAPATH) cat <<'EOF' >>$tmpfile
CPPFLAGS=($CPPFLAGS -I$PORTSYS_EXTRAPATH$INCDIR)
LDFLAGS=($LDFLAGS -L$PORTSYS_EXTRAPATH$LIBDIR)
EOF
	echo $"tmpfile
}

# $1: package
fn genpkg @{
	p=$1
	pkg=`{basename $p}
	if (![ -f $"PORTS/pkg/$"p ]) {
		portsys_io_warning $pkg: not found
		return 1
	}
	portsys_io_message $pkg: creating vars file
	@{ gensection $PORTS/pkg/$p vars | sed 's/=\(.*\)/=(\1)/g'
	patches=`{gensection $PORTS/pkg/$p patches}
	rdeps=`{gensection $PORTS/pkg/$p rdeps}
	mdeps=`{gensection $PORTS/pkg/$p mdeps}
	if (! ~ $#rdeps 0) rdeps=''''^$rdeps^''''
	if (! ~ $#mdeps 0) mdeps=''''^$mdeps^''''
	cat <<EOF
patches=($patches)
rdeps=($rdeps)
mdeps=($mdeps)
EOF
	} > $vdir/$pkg.vars
	portsys_io_message $pkg: merging fetch section
	@{ cat <<EOF
# FETCH
@{ . $tmpdir/$pkg.vars
EOF
	mirrors=`{gensection $PORTS/pkg/$p mirrors}
	urlname=`{basename $mirrors($#mirrors)}
	cat <<EOF
__f=($CACHEDIR/$urlname)
portsys_fetch $$__f $mirrors
. $tmpdir/$pkg.vars
portsys_cksum $$cksum $$__f
if (test -f $$__f) portsys_explode $$__f
if (test -z $$"src) src=$$name-$$version
portsys_patch $$"src $$patches }
EOF
	} >> $ffile
	portsys_io_message $pkg: merging build and install sections
	@{ cat <<EOF
# BUILD
@{ . $tmpdir/$pkg.vars
PORTSYS_TMP_BUILDDIR=`{mktemp -u build.XXXXXXXXXX}
if (test -z $$"src) src=$$name-$$version
cd $$"src
PORTSYS_ROOTPWD=`{pwd}
EOF
	gensection $PORTS/pkg/$p build
	cat <<EOF
# INSTALL
@{
$PKGVARS
DESTDIR=$$PORTSYS_ROOTPWD/.pkgroot
EOF
	gensection $PORTS/pkg/$p install
	cat <<'EOF'
@{
cd $"DESTDIR
portsys_blacklist
find $"BINDIR -type f -exec $"STRIP '{}' +
} >[2] /dev/null || true
dbdir=$"PORTSYS_DBDESTDIR
dbfile=$"PORTSYS_DBDESTDIR/$"name
@{
	cd $PORTSYS_ROOTPWD
	portsys_prepare
	portsys_split
EOF
	cat <<EOF
	OREL=$OREL
	ODREL=$ODREL
	OPKG=$OPKG
EOF
	if ($ODEF) cat <<'EOF'
	if (test -d '.pkgroot') @{
		tmp=`{mktemp}
		portsys_gendb .pkgroot $"dbdir >[1] $"tmp
		$PORTSYS_SU mv $tmp $"dbfile
		if ($OPKG) portsys_pack .pkgroot $"PORTSYS_PKGDESTDIR
		if ($OREL) portsys_reflectfs .pkgroot $"PORTSYS_SYSPATH
	}
EOF
	if ($ODEV) cat <<'EOF'
	if (test -d '.pkgroot_dev') @{
		description=$"description^' <DEVELOPMENT>'
		name=$"name^'-dev'
		tmp=`{mktemp}
		portsys_gendb .pkgroot_dev $"dbdir >[1] $"tmp
		$PORTSYS_SU mv $tmp $"dbfile-dev
		if ($OPKG) portsys_pack .pkgroot_dev $"PORTSYS_PKGDESTDIR
		if ($ODREL) {
			if ($ONODREL) portsys_reflectfs .pkgroot_dev $PORTSYS_TMPSYSPATH
			if not portsys_reflectfs .pkgroot_dev $"PORTSYS_SYSPATH
		}
	}
EOF
	printf '}}}'
	} >> $bfile
}
